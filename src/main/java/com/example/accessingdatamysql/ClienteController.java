package com.example.accessingdatamysql;

import java.util.Date;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class ClienteController {
  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private ClienteRepository clienteRepository;


  @PostMapping(path="/cliente/add") // Map ONLY POST Requests
  public @ResponseBody String addNewCliente (@RequestParam String nombre
      , @RequestParam String apellido
      , @RequestParam String direccion
      , @RequestParam Date fecha_nacimiento
      , @RequestParam String telefono
      , @RequestParam String email) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request

    Cliente n = new Cliente();
    n.setNombre(nombre);
    n.setApellido(apellido);
    n.setDireccion(direccion);
    n.setFecha_nacimiento(fecha_nacimiento);
    n.setTelefono(telefono);
    n.setEmail(email);
    clienteRepository.save(n);
    return "Saved";
  }

 

  @GetMapping(path="/cliente/all",produces = MediaType.APPLICATION_JSON_VALUE)
  public @ResponseBody Iterable<Cliente> getAllCliente() {
    // This returns a JSON or XML with the users
    return clienteRepository.findAll();
  }
}
